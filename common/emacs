(require 'package)

(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))

(setq package-enable-at-startup nil)

;; Package management {{{
(defun ensure-package-installed (&rest packages)
  "Assure every package is installed, ask for installation if itâ€™s not.

Return a list of installed packages or nil for every skipped package."
  (mapcar
   (lambda (package)
     (if (package-installed-p package)
         nil
       (if (y-or-n-p (format "Package %s is missing. Install it? " package))
           (package-install package)
         package)))
   packages))

;; Make sure to have downloaded archive description.
(or (file-exists-p package-user-dir)
    (package-refresh-contents))

;; Activate installed packages
(package-initialize)

;; Assuming you wish to install "iedit" and "magit"
(ensure-package-installed 'evil
                          'evil-leader
                          'magit
                          'sublime-themes
                          'helm)
;; }}}

;; Colorscheme and font {{{
(load-theme 'hickey t)
(set-frame-font "Source Code Pro 13")
;; }}}

;; GUI elements {{{
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(global-linum-mode t)
(setq linum-format "%d ")
;; }}}

;; Helm {{{
(require 'helm)
(helm-mode t)
;; }}}

;; Evil-mode {{{
(require 'evil-leader)
(global-evil-leader-mode)
(evil-leader/set-leader ",")

(evil-leader/set-key
  "w" 'save-buffer
  "d" 'kill-buffer
  "gs" 'magit-status
  ;; "ev" [open .emacs]
  ;; "rs" [run tests]
  "t" 'helm-find-files
)

(require 'evil)
(evil-mode t)
;; }}}

;; still need:
;; - git gutter
;; - softtab, hidden characters
;; - hard wrap for specific filetypes
;; - colorcolumn would be nice
;; - surround
;; - ctags
;; - orgmode
;; - fuzzy finder with helm
;; - project drawer

;; vim: foldmethod=marker foldmarker={{{,}}}
